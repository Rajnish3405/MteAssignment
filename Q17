Calculate how much water can be trapped between the bars of a histogram.

Algorithm:
For each bar, find max left and max right.
Water at each bar = min(left, right) - height.

Code:
public class TrappingRainWater {
    public static void main(String[] args) {
        int[] height = {0, 1, 0, 2, 1, 0, 1, 3};
        int n = height.length;
        int[] left = new int[n], right = new int[n];

        left[0] = height[0];
        for (int i = 1; i < n; i++) left[i] = Math.max(left[i - 1], height[i]);

        right[n - 1] = height[n - 1];
        for (int i = n - 2; i >= 0; i--) right[i] = Math.max(right[i + 1], height[i]);

        int water = 0;
        for (int i = 0; i < n; i++) water += Math.min(left[i], right[i]) - height[i];

        System.out.println("Trapped water: " + water);
    }
}

Example:
Input: [0,1,0,2,1,0,1,3] â†’ Output: 6

Time Complexity: O(n)
Space Complexity: O(n)

