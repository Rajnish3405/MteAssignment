Find two numbers in a sorted array that add up to a target.

Algorithm:
Use two pointers, one at start and one at end.
If sum is equal to target, return the pair.
If sum is less, move left pointer; if more, move right pointer.

Code:
public class TwoSumSorted {
    public static void main(String[] args) {
        int[] arr = {1, 2, 4, 7, 11, 15};
        int target = 15;
        int left = 0, right = arr.length - 1;

        while (left < right) {
            int sum = arr[left] + arr[right];
            if (sum == target) {
                System.out.println("Pair: " + arr[left] + ", " + arr[right]);
                break;
            } else if (sum < target) {
                left++;
            } else {
                right--;
            }
        }
    }
}

Example:
Input: [1, 2, 4, 7, 11, 15], target = 15 â†’ Output: 4, 11

Time Complexity: O(n)
Space Complexity: O(1)


