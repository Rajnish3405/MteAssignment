Rearrange numbers into the lexicographically next greater permutation.
 
Algorithm:
Find the first decreasing element from right.
Swap it with the next larger element to the right.
Reverse the rest part.

Code:
import java.util.Arrays;

public class NextPermutation {
    public static void main(String[] args) {
        int[] nums = {1, 2, 3};

        int i = nums.length - 2;
        while (i >= 0 && nums[i] >= nums[i + 1]) i--;

        if (i >= 0) {
            int j = nums.length - 1;
            while (nums[j] <= nums[i]) j--;
            int temp = nums[i]; nums[i] = nums[j]; nums[j] = temp;
        }

        Arrays.sort(nums, i + 1, nums.length);

        System.out.println("Next permutation:");
        for (int num : nums) System.out.print(num + " ");
    }
}

Example:
Input: [1, 2, 3] â†’ Output: [1, 3, 2]

Time Complexity: O(n)
Space Complexity: O(1)


