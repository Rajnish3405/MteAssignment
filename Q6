Find the length of the longest substring without repeating characters.

Algorithm:
Use HashSet for tracking characters.
Expand right pointer, and move left if duplicate found.

Code:-
import java.util.*;

public class LongestUniqueSubstring {
    public static void main(String[] args) {
        String s = "abcabcbb";
        Set<Character> set = new HashSet<>();
        int left = 0, maxLen = 0;

        for (int right = 0; right < s.length(); right++) {
            while (set.contains(s.charAt(right))) {
                set.remove(s.charAt(left));
                left++;
            }
            set.add(s.charAt(right));
            maxLen = Math.max(maxLen, right - left + 1);
        }

        System.out.println("Length: " + maxLen);
    }
}

Example:-
"abcabcbb" → Longest substring: "abc" → Length: 3

Time Complexity: O(n)
Space Complexity: O(n)
