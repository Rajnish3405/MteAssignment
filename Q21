How to count the number of 1s in the binary representation of numbers from 0 to n.
Algorithm:

For each number from 0 to n, use bitwise operation to count 1s.

OR, use dynamic programming for faster calculation.

Code:
public class CountBits {
    public static void main(String[] args) {
        int n = 5;
        int[] bits = new int[n + 1];

        for (int i = 1; i <= n; i++) {
            bits[i] = bits[i >> 1] + (i & 1);
        }

        for (int i = 0; i <= n; i++) {
            System.out.println(i + " -> " + bits[i]);
        }
    }
}

Example:
Input: 5
Output:
0 → 0
1 → 1
2 → 1
3 → 2
4 → 1
5 → 2

Time Complexity: O(n)
Space Complexity: O(n)

