Find the longest palindromic substring in a given string.

Algorithm:
Expand around each center.
Compare odd and even length palindromes.

Code:-
public class LongestPalindrome {
    static String expand(String s, int left, int right) {
        while (left >= 0 && right < s.length() && s.charAt(left) == s.charAt(right)) {
            left--; right++;
        }
        return s.substring(left + 1, right);
    }

    public static void main(String[] args) {
        String s = "babad", result = "";
        for (int i = 0; i < s.length(); i++) {
            String odd = expand(s, i, i);
            String even = expand(s, i, i + 1);
            if (odd.length() > result.length()) result = odd;
            if (even.length() > result.length()) result = even;
        }
        System.out.println("Longest palindrome: " + result);
    }
}

Example:
"babad" → "bab" or "aba"

Time Complexity: O(n²)
Space Complexity: O(1)

